[metadata]
name = qupulse
version = attr: qupulse.__version__
description = A Quantum compUting PULse parametrization and SEquencing framework
long_description = file: README.md
long_description_content_type = text/markdown
author = Quantum Technology Group and Chair of Software Engineering, RWTH Aachen University
license = MIT
license_files = LICENSE
keywords = quantum, physics, control pulse, qubit
classifiers =
          Programming Language :: Python :: 3
          License :: OSI Approved :: MIT License
          Operating System :: OS Independent
          Topic :: Scientific/Engineering
          Intended Audience :: Science/Research
url = https://github.com/qutech/qupulse

[options]
packages = find:
package_dir =
    qupulse=qupulse
    qctoolkit=qctoolkit
python_requires = >=3.8
install_requires =
    sympy>=1.1.1
    numpy
    cached_property;python_version<'3.8'
    typing-extensions;python_version<'3.8'
    frozendict
    lazy_loader
test_suite = tests

[options.extras_require]
tests =
    pytest
    pytest_benchmark
docs =
    sphinx>=4
    nbsphinx
    ipykernel
    pyvisa
plotting = matplotlib
tabor-instruments =
    tabor_control>=0.1.1
zurich-instruments =
    zhinst<=20.7.2701;python_version<'3.9'
Faster-fractions = gmpy2
tektronix = tek_awg>=0.2.1
autologging = autologging
# sadly not open source for external legal reasons
# commented out because pypi does not allow direct dependencies
# atsaverage = atsaverage @ git+ssh://git@git.rwth-aachen.de/qutech/cpp-atsaverage.git@master#egg=atsaverage&subdirectory=python_source
faster-sampling = numba
# Everything besides awg drivers
default =
    qupulse[tests,docs,plotting,Faster-fractions,autologging,faster-sampling]
    pandas

[options.packages.find]
include =
    qupulse
    qupulse.*
    qctoolkit

[options.package_data]
qupulse =
    *.pyi
qctoolkit =
    *.pyi

[tool:pytest]
testpaths = tests tests/pulses tests/hardware tests/backward_compatibility
python_files=*_tests.py *_bug.py
filterwarnings =
# syntax is action:message_regex:category:module_regex:lineno
# we fail on all with a whitelist because a dependency might mess-up passing the correct stacklevel
    error::SyntaxWarning
    error::DeprecationWarning
# pytest uses readline which uses collections.abc
    ignore:Using or importing the ABCs from \'collections\' instead of from \'collections\.abc\' is deprecated:DeprecationWarning:.*readline.*

[build_sphinx]
project = 'qupulse'
version = 0.9
release = 0.9
source-dir = ./doc/source
build-dir = ./doc/build
fresh-env = 1
