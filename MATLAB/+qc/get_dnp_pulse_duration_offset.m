function currentPulseDurationOffset = get_dnp_pulse_duration_offset()
	
	global tunedata
	
	t = tunedata.run{tunedata.runIndex}.global_opts.dnp.durations;
	
% 	qc.get_pulse_duration(...
% 		qc.struct_to_pulse(tunedata.run{tunedata.runIndex}.global_opts.dnp.scan.configfn(4).args{end}.pulse_template), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
	
% 	t_pumpingPart = qc.get_pulse_duration(...
% 		qc.load_pulse('dnp_ABCD_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
% 	
% 	t_s_AB = qc.get_pulse_duration(...
% 		qc.load_pulse('s_pumping_AB_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
% 	t_cs_AB = qc.get_pulse_duration(...
% 		qc.load_pulse('t_pumping_AB_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
% 	t_t_AB = qc.get_pulse_duration(...
% 		qc.load_pulse('cs_pumping_AB_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
% 	
% 	t_s_CD = qc.get_pulse_duration(...
% 		qc.load_pulse('s_pumping_CD_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
% 	t_t_CD = qc.get_pulse_duration(...
% 		qc.load_pulse('t_pumping_CD_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
% 	t_cs_CD = qc.get_pulse_duration(...
% 		qc.load_pulse('cs_pumping_CD_4chan'), ...
% 		qc.join_params_and_dicts('common', 'common_d12', 'common_d34', 'common_d12 d12', 'common_d34 d34')....
% 		);
		
	pumpConf = tunedata.run{1}.global_opts.dnp.pumpingConfigArgs.currentConfig;
	
	t.current_dnp_pulse = ...
		t.s_AB	* double(pumpConf.n_s_AB) + ...
		t.t_AB	* double(pumpConf.n_t_AB) + ...
		t.cs_AB * double(pumpConf.n_cs_AB) + ...
		t.s_CD	* double(pumpConf.n_s_CD) + ...
		t.t_CD	* double(pumpConf.n_t_CD) + ...
		t.cs_CD * double(pumpConf.n_cs_CD);
	
	currentPulseDurationOffset = t.current_dnp_pulse - t.dict_dnp_pulse;
	
end